name: Run CI

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  macos:
    name: Build MacOS
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x64, aarch64, universal2]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Install Rust Toolchain (Nightly)
        uses: dtolnay/rust-toolchain@nightly

      - name: Build wheels - ${{ matrix.target }}
        uses: PyO3/maturin-action@v1
        if: ${{ matrix.target != 'universal2' }}
        with:
          target: ${{ matrix.target }}
          args: --release --out dist

      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        if: ${{ matrix.target == 'universal2' }}
        with:
          args: --release --universal2 --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86, aarch64]
        include:
        - target: x86
          py-arch: x86
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: ${{ matrix.py-arch || 'x64' }}
      - name: Install Rust Toolchain (Nightly)
        uses: dtolnay/rust-toolchain@nightly

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    name: Build Linux (glibc)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x64, x86, aarch64, armv7, s390x, ppc64le, ppc64]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: nightly
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  linux-musl:
    name: Build Linux (musl)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x64, x86, aarch64, armv7]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: nightly
        target: ${{ matrix.target }}
        manylinux: musllinux_1_2
        args: --release --out dist

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: nightly
        manylinux: auto
        command: sdist
        args: -o dist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: [ macos, windows, linux, linux-musl, sdist ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing *
